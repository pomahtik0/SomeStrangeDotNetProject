@using SomeStrangeDotNetProject.Models.JSON_translate_model
@using SomeStrangeDotNetProject.Models.JSON_translate_model.CollectionDataTypes
@using SomeStrangeDotNetProject.Models.JSON_translate_model.DataTypes
@model TreeModel

<style>
    /* Remove default bullets */
    ul, #myUL {
        list-style-type: none;
    }

    /* Remove margins and padding from the parent ul */
    #myUL {
        margin: 0;
        padding: 0;
    }

    /* Style the caret/arrow */
    .caret {
        cursor: pointer;
        user-select: none; /* Prevent text selection */
    }

        /* Create the caret/arrow with a unicode, and style it */
        .caret::before {
            content: "\25B6";
            color: black;
            display: inline-block;
            margin-right: 6px;
        }

    /* Rotate the caret/arrow icon when clicked on (using JavaScript) */
    .caret-down::before {
        transform: rotate(90deg);
    }

    /* Hide the nested list */
    .nested {
        display: none;
    }

    /* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
    .active {
        display: block;
    }
</style>

@functions {
    string RenderTree(TreeObject rout)
    {
        string htmlString = "<ul class='nested'>"; // string builder mb
        foreach (var child in rout)
        {
            htmlString += "<li>";
            if (child is TreeObject)
            {
                htmlString += $"<span class ='caret'>{child.Key}</span>";
                htmlString += RenderTree((TreeObject)child);
            }
            else if (child is TreeString)
            {
                htmlString += $"{child.Key}  {((TreeString)child).Value}";
            }
            htmlString += "</li>";
        }
        return htmlString += "</ul>";
    }
}

@using (Html.BeginForm("GetTree", "ShowTrees", FormMethod.Get))
{
    @Html.LabelFor(m => m.Id, "Tree name:")
    @Html.DropDownListFor(m => m.Id, (SelectList)ViewBag.Trees)

    <input type="submit" value="Load this tree" />
}

@{
    if (Model?.TreeRoot != null)
    {
        <ul id="myUL">
            <li>
                <span class ="caret">@Model.Name</span>
                @Html.Raw(RenderTree(Model.TreeRoot))
            </li>
        </ul>
    }
}

<script>
    var toggler = document.getElementsByClassName("caret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
        });
    }
</script>
